import { Async } from "domain/entities/Async";
import { AutogenConfig, DataSet } from "domain/entities/AutogenConfig";
import _ from "lodash";
import { D2Api } from "types/d2-api";

const D2_REPORTS = "d2-reports";
const AUTOGENERATED_FORMS = "autogenerated-forms";

const D2_AUTOGEN_FORMS = "d2-autogen-forms";

export class AutogenConfigD2Repository implements AutogenConfigD2Repository {
    constructor(private api: D2Api) {}

    async getOldConfig(): Async<AutogenConfig> {
        const emptyAutogenConfig = getEmptyAutogenConfig();

        return (
            (await this.api.dataStore(D2_REPORTS).get<AutogenConfig>(AUTOGENERATED_FORMS).getData()) ??
            emptyAutogenConfig
        );
    }

    async getAllDataSets(dataSetCodes: string[]): Async<DataSet[]> {
        return (
            await this.api
                .get<{ dataSets: DataSet[] }>("/dataSets", {
                    filter: `code:in:[${dataSetCodes}]`,
                    fields: "code,dataSetElements[dataElement[code],categoryCombo[code]]",
                })
                .getData()
        ).dataSets;
    }

    async formatConfig(dataSet: DataSet, config: AutogenConfig): Async<AutogenConfig> {
        const { categoryCombinations, dataElements, dataSets: dataSetsConfig } = config;

        const dataSetDECodes = dataSet.dataSetElements.map(dsElement => dsElement.dataElement.code) ?? [];
        const dataSetCatComboCodes = _(dataSet.dataSetElements)
            .map(dsElement => dsElement.categoryCombo?.code)
            .compact()
            .value();

        const autogenConfig = {
            dataSets: { [dataSet.code]: dataSetsConfig[dataSet.code] },
            dataElements: _.pick(dataElements, dataSetDECodes),
            categoryCombinations: _.pick(categoryCombinations, dataSetCatComboCodes),
        };

        return _.pickBy(autogenConfig, value => value !== undefined && Object.keys(value).length !== 0);
    }

    async saveNewConfig(dataSetCode: string, config: AutogenConfig): Async<void> {
        return await this.api.dataStore(D2_AUTOGEN_FORMS).save(dataSetCode, config).getData();
    }
}

function getEmptyAutogenConfig() {
    return {
        dataSets: {},
        dataElements: {},
        categoryCombinations: {},
    };
}
